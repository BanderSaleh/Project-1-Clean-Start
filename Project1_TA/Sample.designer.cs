#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project1_TA
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AdventureWorksDW2019")]
	public partial class SampleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDimEmployee(DimEmployee instance);
    partial void UpdateDimEmployee(DimEmployee instance);
    partial void DeleteDimEmployee(DimEmployee instance);
    partial void InsertDimGeography(DimGeography instance);
    partial void UpdateDimGeography(DimGeography instance);
    partial void DeleteDimGeography(DimGeography instance);
    partial void InsertDimSalesTerritory(DimSalesTerritory instance);
    partial void UpdateDimSalesTerritory(DimSalesTerritory instance);
    partial void DeleteDimSalesTerritory(DimSalesTerritory instance);
    #endregion
		
		public SampleDataContext() : 
				base(global::Project1_TA.Properties.Settings.Default.AdventureWorksDW2019ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SampleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SampleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SampleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SampleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DimEmployee> DimEmployees
		{
			get
			{
				return this.GetTable<DimEmployee>();
			}
		}
		
		public System.Data.Linq.Table<DimGeography> DimGeographies
		{
			get
			{
				return this.GetTable<DimGeography>();
			}
		}
		
		public System.Data.Linq.Table<DimSalesTerritory> DimSalesTerritories
		{
			get
			{
				return this.GetTable<DimSalesTerritory>();
			}
		}

        public object FirstName { get; internal set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DimEmployee")]
	public partial class DimEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeKey;
		
		private System.Nullable<int> _ParentEmployeeKey;
		
		private string _EmployeeNationalIDAlternateKey;
		
		private string _ParentEmployeeNationalIDAlternateKey;
		
		private System.Nullable<int> _SalesTerritoryKey;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MiddleName;
		
		private bool _NameStyle;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _HireDate;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _LoginID;
		
		private string _EmailAddress;
		
		private string _Phone;
		
		private System.Nullable<char> _MaritalStatus;
		
		private string _EmergencyContactName;
		
		private string _EmergencyContactPhone;
		
		private System.Nullable<bool> _SalariedFlag;
		
		private System.Nullable<char> _Gender;
		
		private System.Nullable<byte> _PayFrequency;
		
		private System.Nullable<decimal> _BaseRate;
		
		private System.Nullable<short> _VacationHours;
		
		private System.Nullable<short> _SickLeaveHours;
		
		private bool _CurrentFlag;
		
		private bool _SalesPersonFlag;
		
		private string _DepartmentName;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Status;
		
		private System.Data.Linq.Binary _EmployeePhoto;
		
		private EntitySet<DimEmployee> _DimEmployees;
		
		private EntityRef<DimEmployee> _DimEmployee1;
		
		private EntityRef<DimSalesTerritory> _DimSalesTerritory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeKeyChanging(int value);
    partial void OnEmployeeKeyChanged();
    partial void OnParentEmployeeKeyChanging(System.Nullable<int> value);
    partial void OnParentEmployeeKeyChanged();
    partial void OnEmployeeNationalIDAlternateKeyChanging(string value);
    partial void OnEmployeeNationalIDAlternateKeyChanged();
    partial void OnParentEmployeeNationalIDAlternateKeyChanging(string value);
    partial void OnParentEmployeeNationalIDAlternateKeyChanged();
    partial void OnSalesTerritoryKeyChanging(System.Nullable<int> value);
    partial void OnSalesTerritoryKeyChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnNameStyleChanging(bool value);
    partial void OnNameStyleChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnHireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHireDateChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMaritalStatusChanging(System.Nullable<char> value);
    partial void OnMaritalStatusChanged();
    partial void OnEmergencyContactNameChanging(string value);
    partial void OnEmergencyContactNameChanged();
    partial void OnEmergencyContactPhoneChanging(string value);
    partial void OnEmergencyContactPhoneChanged();
    partial void OnSalariedFlagChanging(System.Nullable<bool> value);
    partial void OnSalariedFlagChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnPayFrequencyChanging(System.Nullable<byte> value);
    partial void OnPayFrequencyChanged();
    partial void OnBaseRateChanging(System.Nullable<decimal> value);
    partial void OnBaseRateChanged();
    partial void OnVacationHoursChanging(System.Nullable<short> value);
    partial void OnVacationHoursChanged();
    partial void OnSickLeaveHoursChanging(System.Nullable<short> value);
    partial void OnSickLeaveHoursChanged();
    partial void OnCurrentFlagChanging(bool value);
    partial void OnCurrentFlagChanged();
    partial void OnSalesPersonFlagChanging(bool value);
    partial void OnSalesPersonFlagChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnEmployeePhotoChanging(System.Data.Linq.Binary value);
    partial void OnEmployeePhotoChanged();
    #endregion
		
		public DimEmployee()
		{
			this._DimEmployees = new EntitySet<DimEmployee>(new Action<DimEmployee>(this.attach_DimEmployees), new Action<DimEmployee>(this.detach_DimEmployees));
			this._DimEmployee1 = default(EntityRef<DimEmployee>);
			this._DimSalesTerritory = default(EntityRef<DimSalesTerritory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeKey
		{
			get
			{
				return this._EmployeeKey;
			}
			set
			{
				if ((this._EmployeeKey != value))
				{
					this.OnEmployeeKeyChanging(value);
					this.SendPropertyChanging();
					this._EmployeeKey = value;
					this.SendPropertyChanged("EmployeeKey");
					this.OnEmployeeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentEmployeeKey", DbType="Int")]
		public System.Nullable<int> ParentEmployeeKey
		{
			get
			{
				return this._ParentEmployeeKey;
			}
			set
			{
				if ((this._ParentEmployeeKey != value))
				{
					if (this._DimEmployee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentEmployeeKeyChanging(value);
					this.SendPropertyChanging();
					this._ParentEmployeeKey = value;
					this.SendPropertyChanged("ParentEmployeeKey");
					this.OnParentEmployeeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeNationalIDAlternateKey", DbType="NVarChar(15)")]
		public string EmployeeNationalIDAlternateKey
		{
			get
			{
				return this._EmployeeNationalIDAlternateKey;
			}
			set
			{
				if ((this._EmployeeNationalIDAlternateKey != value))
				{
					this.OnEmployeeNationalIDAlternateKeyChanging(value);
					this.SendPropertyChanging();
					this._EmployeeNationalIDAlternateKey = value;
					this.SendPropertyChanged("EmployeeNationalIDAlternateKey");
					this.OnEmployeeNationalIDAlternateKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentEmployeeNationalIDAlternateKey", DbType="NVarChar(15)")]
		public string ParentEmployeeNationalIDAlternateKey
		{
			get
			{
				return this._ParentEmployeeNationalIDAlternateKey;
			}
			set
			{
				if ((this._ParentEmployeeNationalIDAlternateKey != value))
				{
					this.OnParentEmployeeNationalIDAlternateKeyChanging(value);
					this.SendPropertyChanging();
					this._ParentEmployeeNationalIDAlternateKey = value;
					this.SendPropertyChanged("ParentEmployeeNationalIDAlternateKey");
					this.OnParentEmployeeNationalIDAlternateKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTerritoryKey", DbType="Int")]
		public System.Nullable<int> SalesTerritoryKey
		{
			get
			{
				return this._SalesTerritoryKey;
			}
			set
			{
				if ((this._SalesTerritoryKey != value))
				{
					if (this._DimSalesTerritory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesTerritoryKeyChanging(value);
					this.SendPropertyChanging();
					this._SalesTerritoryKey = value;
					this.SendPropertyChanged("SalesTerritoryKey");
					this.OnSalesTerritoryKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameStyle", DbType="Bit NOT NULL")]
		public bool NameStyle
		{
			get
			{
				return this._NameStyle;
			}
			set
			{
				if ((this._NameStyle != value))
				{
					this.OnNameStyleChanging(value);
					this.SendPropertyChanging();
					this._NameStyle = value;
					this.SendPropertyChanged("NameStyle");
					this.OnNameStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HireDate", DbType="Date")]
		public System.Nullable<System.DateTime> HireDate
		{
			get
			{
				return this._HireDate;
			}
			set
			{
				if ((this._HireDate != value))
				{
					this.OnHireDateChanging(value);
					this.SendPropertyChanging();
					this._HireDate = value;
					this.SendPropertyChanged("HireDate");
					this.OnHireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="NVarChar(256)")]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(50)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NChar(1)")]
		public System.Nullable<char> MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactName", DbType="NVarChar(50)")]
		public string EmergencyContactName
		{
			get
			{
				return this._EmergencyContactName;
			}
			set
			{
				if ((this._EmergencyContactName != value))
				{
					this.OnEmergencyContactNameChanging(value);
					this.SendPropertyChanging();
					this._EmergencyContactName = value;
					this.SendPropertyChanged("EmergencyContactName");
					this.OnEmergencyContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactPhone", DbType="NVarChar(25)")]
		public string EmergencyContactPhone
		{
			get
			{
				return this._EmergencyContactPhone;
			}
			set
			{
				if ((this._EmergencyContactPhone != value))
				{
					this.OnEmergencyContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._EmergencyContactPhone = value;
					this.SendPropertyChanged("EmergencyContactPhone");
					this.OnEmergencyContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalariedFlag", DbType="Bit")]
		public System.Nullable<bool> SalariedFlag
		{
			get
			{
				return this._SalariedFlag;
			}
			set
			{
				if ((this._SalariedFlag != value))
				{
					this.OnSalariedFlagChanging(value);
					this.SendPropertyChanging();
					this._SalariedFlag = value;
					this.SendPropertyChanged("SalariedFlag");
					this.OnSalariedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NChar(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayFrequency", DbType="TinyInt")]
		public System.Nullable<byte> PayFrequency
		{
			get
			{
				return this._PayFrequency;
			}
			set
			{
				if ((this._PayFrequency != value))
				{
					this.OnPayFrequencyChanging(value);
					this.SendPropertyChanging();
					this._PayFrequency = value;
					this.SendPropertyChanged("PayFrequency");
					this.OnPayFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseRate", DbType="Money")]
		public System.Nullable<decimal> BaseRate
		{
			get
			{
				return this._BaseRate;
			}
			set
			{
				if ((this._BaseRate != value))
				{
					this.OnBaseRateChanging(value);
					this.SendPropertyChanging();
					this._BaseRate = value;
					this.SendPropertyChanged("BaseRate");
					this.OnBaseRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacationHours", DbType="SmallInt")]
		public System.Nullable<short> VacationHours
		{
			get
			{
				return this._VacationHours;
			}
			set
			{
				if ((this._VacationHours != value))
				{
					this.OnVacationHoursChanging(value);
					this.SendPropertyChanging();
					this._VacationHours = value;
					this.SendPropertyChanged("VacationHours");
					this.OnVacationHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SickLeaveHours", DbType="SmallInt")]
		public System.Nullable<short> SickLeaveHours
		{
			get
			{
				return this._SickLeaveHours;
			}
			set
			{
				if ((this._SickLeaveHours != value))
				{
					this.OnSickLeaveHoursChanging(value);
					this.SendPropertyChanging();
					this._SickLeaveHours = value;
					this.SendPropertyChanged("SickLeaveHours");
					this.OnSickLeaveHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentFlag", DbType="Bit NOT NULL")]
		public bool CurrentFlag
		{
			get
			{
				return this._CurrentFlag;
			}
			set
			{
				if ((this._CurrentFlag != value))
				{
					this.OnCurrentFlagChanging(value);
					this.SendPropertyChanging();
					this._CurrentFlag = value;
					this.SendPropertyChanged("CurrentFlag");
					this.OnCurrentFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPersonFlag", DbType="Bit NOT NULL")]
		public bool SalesPersonFlag
		{
			get
			{
				return this._SalesPersonFlag;
			}
			set
			{
				if ((this._SalesPersonFlag != value))
				{
					this.OnSalesPersonFlagChanging(value);
					this.SendPropertyChanging();
					this._SalesPersonFlag = value;
					this.SendPropertyChanged("SalesPersonFlag");
					this.OnSalesPersonFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(50)")]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeePhoto", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary EmployeePhoto
		{
			get
			{
				return this._EmployeePhoto;
			}
			set
			{
				if ((this._EmployeePhoto != value))
				{
					this.OnEmployeePhotoChanging(value);
					this.SendPropertyChanging();
					this._EmployeePhoto = value;
					this.SendPropertyChanged("EmployeePhoto");
					this.OnEmployeePhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DimEmployee_DimEmployee", Storage="_DimEmployees", ThisKey="EmployeeKey", OtherKey="ParentEmployeeKey")]
		public EntitySet<DimEmployee> DimEmployees
		{
			get
			{
				return this._DimEmployees;
			}
			set
			{
				this._DimEmployees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DimEmployee_DimEmployee", Storage="_DimEmployee1", ThisKey="ParentEmployeeKey", OtherKey="EmployeeKey", IsForeignKey=true)]
		public DimEmployee DimEmployee1
		{
			get
			{
				return this._DimEmployee1.Entity;
			}
			set
			{
				DimEmployee previousValue = this._DimEmployee1.Entity;
				if (((previousValue != value) 
							|| (this._DimEmployee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DimEmployee1.Entity = null;
						previousValue.DimEmployees.Remove(this);
					}
					this._DimEmployee1.Entity = value;
					if ((value != null))
					{
						value.DimEmployees.Add(this);
						this._ParentEmployeeKey = value.EmployeeKey;
					}
					else
					{
						this._ParentEmployeeKey = default(Nullable<int>);
					}
					this.SendPropertyChanged("DimEmployee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DimSalesTerritory_DimEmployee", Storage="_DimSalesTerritory", ThisKey="SalesTerritoryKey", OtherKey="SalesTerritoryKey", IsForeignKey=true)]
		public DimSalesTerritory DimSalesTerritory
		{
			get
			{
				return this._DimSalesTerritory.Entity;
			}
			set
			{
				DimSalesTerritory previousValue = this._DimSalesTerritory.Entity;
				if (((previousValue != value) 
							|| (this._DimSalesTerritory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DimSalesTerritory.Entity = null;
						previousValue.DimEmployees.Remove(this);
					}
					this._DimSalesTerritory.Entity = value;
					if ((value != null))
					{
						value.DimEmployees.Add(this);
						this._SalesTerritoryKey = value.SalesTerritoryKey;
					}
					else
					{
						this._SalesTerritoryKey = default(Nullable<int>);
					}
					this.SendPropertyChanged("DimSalesTerritory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DimEmployees(DimEmployee entity)
		{
			this.SendPropertyChanging();
			entity.DimEmployee1 = this;
		}
		
		private void detach_DimEmployees(DimEmployee entity)
		{
			this.SendPropertyChanging();
			entity.DimEmployee1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DimGeography")]
	public partial class DimGeography : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GeographyKey;
		
		private string _City;
		
		private string _StateProvinceCode;
		
		private string _StateProvinceName;
		
		private string _CountryRegionCode;
		
		private string _EnglishCountryRegionName;
		
		private string _SpanishCountryRegionName;
		
		private string _FrenchCountryRegionName;
		
		private string _PostalCode;
		
		private System.Nullable<int> _SalesTerritoryKey;
		
		private string _IpAddressLocator;
		
		private EntityRef<DimSalesTerritory> _DimSalesTerritory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGeographyKeyChanging(int value);
    partial void OnGeographyKeyChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateProvinceCodeChanging(string value);
    partial void OnStateProvinceCodeChanged();
    partial void OnStateProvinceNameChanging(string value);
    partial void OnStateProvinceNameChanged();
    partial void OnCountryRegionCodeChanging(string value);
    partial void OnCountryRegionCodeChanged();
    partial void OnEnglishCountryRegionNameChanging(string value);
    partial void OnEnglishCountryRegionNameChanged();
    partial void OnSpanishCountryRegionNameChanging(string value);
    partial void OnSpanishCountryRegionNameChanged();
    partial void OnFrenchCountryRegionNameChanging(string value);
    partial void OnFrenchCountryRegionNameChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnSalesTerritoryKeyChanging(System.Nullable<int> value);
    partial void OnSalesTerritoryKeyChanged();
    partial void OnIpAddressLocatorChanging(string value);
    partial void OnIpAddressLocatorChanged();
    #endregion
		
		public DimGeography()
		{
			this._DimSalesTerritory = default(EntityRef<DimSalesTerritory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeographyKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GeographyKey
		{
			get
			{
				return this._GeographyKey;
			}
			set
			{
				if ((this._GeographyKey != value))
				{
					this.OnGeographyKeyChanging(value);
					this.SendPropertyChanging();
					this._GeographyKey = value;
					this.SendPropertyChanged("GeographyKey");
					this.OnGeographyKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(30)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateProvinceCode", DbType="NVarChar(3)")]
		public string StateProvinceCode
		{
			get
			{
				return this._StateProvinceCode;
			}
			set
			{
				if ((this._StateProvinceCode != value))
				{
					this.OnStateProvinceCodeChanging(value);
					this.SendPropertyChanging();
					this._StateProvinceCode = value;
					this.SendPropertyChanged("StateProvinceCode");
					this.OnStateProvinceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateProvinceName", DbType="NVarChar(50)")]
		public string StateProvinceName
		{
			get
			{
				return this._StateProvinceName;
			}
			set
			{
				if ((this._StateProvinceName != value))
				{
					this.OnStateProvinceNameChanging(value);
					this.SendPropertyChanging();
					this._StateProvinceName = value;
					this.SendPropertyChanged("StateProvinceName");
					this.OnStateProvinceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryRegionCode", DbType="NVarChar(3)")]
		public string CountryRegionCode
		{
			get
			{
				return this._CountryRegionCode;
			}
			set
			{
				if ((this._CountryRegionCode != value))
				{
					this.OnCountryRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryRegionCode = value;
					this.SendPropertyChanged("CountryRegionCode");
					this.OnCountryRegionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishCountryRegionName", DbType="NVarChar(50)")]
		public string EnglishCountryRegionName
		{
			get
			{
				return this._EnglishCountryRegionName;
			}
			set
			{
				if ((this._EnglishCountryRegionName != value))
				{
					this.OnEnglishCountryRegionNameChanging(value);
					this.SendPropertyChanging();
					this._EnglishCountryRegionName = value;
					this.SendPropertyChanged("EnglishCountryRegionName");
					this.OnEnglishCountryRegionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpanishCountryRegionName", DbType="NVarChar(50)")]
		public string SpanishCountryRegionName
		{
			get
			{
				return this._SpanishCountryRegionName;
			}
			set
			{
				if ((this._SpanishCountryRegionName != value))
				{
					this.OnSpanishCountryRegionNameChanging(value);
					this.SendPropertyChanging();
					this._SpanishCountryRegionName = value;
					this.SendPropertyChanged("SpanishCountryRegionName");
					this.OnSpanishCountryRegionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrenchCountryRegionName", DbType="NVarChar(50)")]
		public string FrenchCountryRegionName
		{
			get
			{
				return this._FrenchCountryRegionName;
			}
			set
			{
				if ((this._FrenchCountryRegionName != value))
				{
					this.OnFrenchCountryRegionNameChanging(value);
					this.SendPropertyChanging();
					this._FrenchCountryRegionName = value;
					this.SendPropertyChanged("FrenchCountryRegionName");
					this.OnFrenchCountryRegionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(15)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTerritoryKey", DbType="Int")]
		public System.Nullable<int> SalesTerritoryKey
		{
			get
			{
				return this._SalesTerritoryKey;
			}
			set
			{
				if ((this._SalesTerritoryKey != value))
				{
					if (this._DimSalesTerritory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesTerritoryKeyChanging(value);
					this.SendPropertyChanging();
					this._SalesTerritoryKey = value;
					this.SendPropertyChanged("SalesTerritoryKey");
					this.OnSalesTerritoryKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAddressLocator", DbType="NVarChar(15)")]
		public string IpAddressLocator
		{
			get
			{
				return this._IpAddressLocator;
			}
			set
			{
				if ((this._IpAddressLocator != value))
				{
					this.OnIpAddressLocatorChanging(value);
					this.SendPropertyChanging();
					this._IpAddressLocator = value;
					this.SendPropertyChanged("IpAddressLocator");
					this.OnIpAddressLocatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DimSalesTerritory_DimGeography", Storage="_DimSalesTerritory", ThisKey="SalesTerritoryKey", OtherKey="SalesTerritoryKey", IsForeignKey=true)]
		public DimSalesTerritory DimSalesTerritory
		{
			get
			{
				return this._DimSalesTerritory.Entity;
			}
			set
			{
				DimSalesTerritory previousValue = this._DimSalesTerritory.Entity;
				if (((previousValue != value) 
							|| (this._DimSalesTerritory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DimSalesTerritory.Entity = null;
						previousValue.DimGeographies.Remove(this);
					}
					this._DimSalesTerritory.Entity = value;
					if ((value != null))
					{
						value.DimGeographies.Add(this);
						this._SalesTerritoryKey = value.SalesTerritoryKey;
					}
					else
					{
						this._SalesTerritoryKey = default(Nullable<int>);
					}
					this.SendPropertyChanged("DimSalesTerritory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DimSalesTerritory")]
	public partial class DimSalesTerritory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SalesTerritoryKey;
		
		private System.Nullable<int> _SalesTerritoryAlternateKey;
		
		private string _SalesTerritoryRegion;
		
		private string _SalesTerritoryCountry;
		
		private string _SalesTerritoryGroup;
		
		private System.Data.Linq.Binary _SalesTerritoryImage;
		
		private EntitySet<DimEmployee> _DimEmployees;
		
		private EntitySet<DimGeography> _DimGeographies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesTerritoryKeyChanging(int value);
    partial void OnSalesTerritoryKeyChanged();
    partial void OnSalesTerritoryAlternateKeyChanging(System.Nullable<int> value);
    partial void OnSalesTerritoryAlternateKeyChanged();
    partial void OnSalesTerritoryRegionChanging(string value);
    partial void OnSalesTerritoryRegionChanged();
    partial void OnSalesTerritoryCountryChanging(string value);
    partial void OnSalesTerritoryCountryChanged();
    partial void OnSalesTerritoryGroupChanging(string value);
    partial void OnSalesTerritoryGroupChanged();
    partial void OnSalesTerritoryImageChanging(System.Data.Linq.Binary value);
    partial void OnSalesTerritoryImageChanged();
    #endregion
		
		public DimSalesTerritory()
		{
			this._DimEmployees = new EntitySet<DimEmployee>(new Action<DimEmployee>(this.attach_DimEmployees), new Action<DimEmployee>(this.detach_DimEmployees));
			this._DimGeographies = new EntitySet<DimGeography>(new Action<DimGeography>(this.attach_DimGeographies), new Action<DimGeography>(this.detach_DimGeographies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTerritoryKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SalesTerritoryKey
		{
			get
			{
				return this._SalesTerritoryKey;
			}
			set
			{
				if ((this._SalesTerritoryKey != value))
				{
					this.OnSalesTerritoryKeyChanging(value);
					this.SendPropertyChanging();
					this._SalesTerritoryKey = value;
					this.SendPropertyChanged("SalesTerritoryKey");
					this.OnSalesTerritoryKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTerritoryAlternateKey", DbType="Int")]
		public System.Nullable<int> SalesTerritoryAlternateKey
		{
			get
			{
				return this._SalesTerritoryAlternateKey;
			}
			set
			{
				if ((this._SalesTerritoryAlternateKey != value))
				{
					this.OnSalesTerritoryAlternateKeyChanging(value);
					this.SendPropertyChanging();
					this._SalesTerritoryAlternateKey = value;
					this.SendPropertyChanged("SalesTerritoryAlternateKey");
					this.OnSalesTerritoryAlternateKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTerritoryRegion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SalesTerritoryRegion
		{
			get
			{
				return this._SalesTerritoryRegion;
			}
			set
			{
				if ((this._SalesTerritoryRegion != value))
				{
					this.OnSalesTerritoryRegionChanging(value);
					this.SendPropertyChanging();
					this._SalesTerritoryRegion = value;
					this.SendPropertyChanged("SalesTerritoryRegion");
					this.OnSalesTerritoryRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTerritoryCountry", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SalesTerritoryCountry
		{
			get
			{
				return this._SalesTerritoryCountry;
			}
			set
			{
				if ((this._SalesTerritoryCountry != value))
				{
					this.OnSalesTerritoryCountryChanging(value);
					this.SendPropertyChanging();
					this._SalesTerritoryCountry = value;
					this.SendPropertyChanged("SalesTerritoryCountry");
					this.OnSalesTerritoryCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTerritoryGroup", DbType="NVarChar(50)")]
		public string SalesTerritoryGroup
		{
			get
			{
				return this._SalesTerritoryGroup;
			}
			set
			{
				if ((this._SalesTerritoryGroup != value))
				{
					this.OnSalesTerritoryGroupChanging(value);
					this.SendPropertyChanging();
					this._SalesTerritoryGroup = value;
					this.SendPropertyChanged("SalesTerritoryGroup");
					this.OnSalesTerritoryGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTerritoryImage", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary SalesTerritoryImage
		{
			get
			{
				return this._SalesTerritoryImage;
			}
			set
			{
				if ((this._SalesTerritoryImage != value))
				{
					this.OnSalesTerritoryImageChanging(value);
					this.SendPropertyChanging();
					this._SalesTerritoryImage = value;
					this.SendPropertyChanged("SalesTerritoryImage");
					this.OnSalesTerritoryImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DimSalesTerritory_DimEmployee", Storage="_DimEmployees", ThisKey="SalesTerritoryKey", OtherKey="SalesTerritoryKey")]
		public EntitySet<DimEmployee> DimEmployees
		{
			get
			{
				return this._DimEmployees;
			}
			set
			{
				this._DimEmployees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DimSalesTerritory_DimGeography", Storage="_DimGeographies", ThisKey="SalesTerritoryKey", OtherKey="SalesTerritoryKey")]
		public EntitySet<DimGeography> DimGeographies
		{
			get
			{
				return this._DimGeographies;
			}
			set
			{
				this._DimGeographies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DimEmployees(DimEmployee entity)
		{
			this.SendPropertyChanging();
			entity.DimSalesTerritory = this;
		}
		
		private void detach_DimEmployees(DimEmployee entity)
		{
			this.SendPropertyChanging();
			entity.DimSalesTerritory = null;
		}
		
		private void attach_DimGeographies(DimGeography entity)
		{
			this.SendPropertyChanging();
			entity.DimSalesTerritory = this;
		}
		
		private void detach_DimGeographies(DimGeography entity)
		{
			this.SendPropertyChanging();
			entity.DimSalesTerritory = null;
		}
	}
}
#pragma warning restore 1591
